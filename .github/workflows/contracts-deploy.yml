name: Contracts Deploy
on:
  push:
    paths:
      - 'packages/contracts/**'
    branches:
      - 'develop'
      - 'main'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.prepare.outputs.environment }}
      tags: ${{ steps.prepare.outputs.tags }}
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: node .github/helpers/contracts/matrixGenerator.js '${{ github.ref }}'
      - name: Debug on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3
  build-deploy:
    runs-on: ubuntu-latest
    needs: [prepare]
    environment: ${{ needs.prepare.outputs.environment }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Compile
        run: cd packages/contracts && yarn run compile
      - name: Run Hardhat Tests
        env:
          REPORT_GAS: true
        run: cd packages/contracts && yarn run test
      - name: Deploy
        run: cd packages/contracts && yarn run deploy --network $NETWORK --tags "DAOFactory,TokenFactory,${{ needs.prepare.outputs.tags }}"
        env:
          ETH_KEY: ${{ secrets.ETH_KEY }}
          NETWORK: ${{ secrets.NETWORK_NAME }}
          ETHERSCAN_KEY: ${{ secrets.ETHERSCAN_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.network}}
          path: ./packages/contracts/deployments/*
          retention-days: 1
      - name: Debug on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3
  conclude:
    runs-on: ubuntu-latest
    needs: ['build-deploy']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          path: artefacts
      - name: Update Releases.md
        run: node .github/helpers/contracts/updateReleasesMD.js
      - name: Update active_contracts.json
        run: node .github/helpers/contracts/updateActiveContractsJSON.js
      - name: Commit changes
        run: |
          git fetch
          git pull
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -am "Updates files with deployed contract addresses"
          git push
      - name: Debug on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3
